# .github/workflows/publish-to-pypi.yml
name: Test and Publish Python Package

on:
  push:
    branches: [ main ] # Run tests on pushes to main
    # Run publish job only when a tag matching v*.*.* (e.g., v0.1.0) is pushed
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ] # Run tests on PRs targeting main

jobs:
  test:
    name: Run Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Don't cancel all jobs if one Python version fails
      matrix:
        # Test against Python versions defined in pyproject.toml
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true # Cache venv in project dir
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --no-interaction --no-root --with dev

      - name: Install project package with dev dependencies
        run: poetry install --no-interaction --with dev

      - name: Run tests with pytest
        run: poetry run pytest tests/

  publish:
    name: Build and Publish to PyPI
    # Only run this job if:
    # 1. The trigger was a tag push matching v*.*.*
    # 2. Tests passed (needs: test)
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/tomi-kristof-package-test/
    permissions:
      # Required for trusted publishing OIDC
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Build package
        run: poetry build

      - name: Publish package to PyPI using API Token
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
            password: ${{ secrets.PYPI_API_TOKEN }}
            packages-dir: dist/